<Window x:Class="SecureLibrary.Windows.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:sl="clr-namespace:SecureLibrary"
        xmlns:local="clr-namespace:SecureLibrary.Windows"
        xmlns:conv="clr-namespace:SecureLibrary.Utilities.Converters"
        xmlns:ext="clr-namespace:SecureLibrary.Utilities.MarkupExtensions"
        xmlns:md="clr-namespace:Material.Icons.WPF;assembly=Material.Icons.WPF"
        mc:Ignorable="d"
        Height="450" Width="800"
        Closing="MainWindow_Closing"
        x:Name="This">
    <Window.Title>
        <MultiBinding StringFormat="Secure Library [{0}] {1}" FallbackValue="Secure Library">
            <Binding Path="Library.StorageMethod.Name" ElementName="This"/>
            <Binding Path="Library.Storage.Name" ElementName="This"/>
        </MultiBinding>
    </Window.Title>
    <Window.Resources>
        <Style x:Key="MenuButtonMenuItem"
               TargetType="MenuItem"
               BasedOn="{StaticResource {x:Type MenuItem}}">
            <Setter Property="Header" Value="{Binding Content}"/>
            <Setter Property="Icon" Value="{Binding Icon, Converter={conv:MdIconGenerator Plus, 16}}"/>
        </Style>
        <ContextMenu x:Key="PickBinaryStorageContextMenu"
                     ItemsSource="{x:Static sl:App.CurrentStorageFactories}">
            <ContextMenu.ItemContainerStyle>
                <Style TargetType="MenuItem"
                       BasedOn="{StaticResource {x:Type MenuItem}}">
                    <Setter Property="Header" Value="{Binding Name}"/>
                    <Setter Property="Icon"
                            Value="{Binding Icon, Converter={conv:IconKindToMdIconConverter 16}}"/>
                    <Setter Property="ItemsSource" Value="{x:Static sl:App.CurrentStorageMethodFactories}"/>
                    <Setter Property="ItemContainerStyle">
                        <Setter.Value>
                            <Style TargetType="MenuItem"
                                   BasedOn="{StaticResource {x:Type MenuItem}}">
                                <Setter Property="Command"
                                        Value="{ext:CommandFactory Handler=PickBinaryStorageMenuItem_Click}"/>
                                <Setter Property="CommandParameter"
                                        Value="{Binding RelativeSource={RelativeSource Self}}"/>
                                <Setter Property="Tag"
                                        Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type MenuItem}}}"/>
                                <Setter Property="Header" Value="{Binding Name}"/>
                                <Setter Property="Icon"
                                        Value="{Binding Icon, Converter={conv:IconKindToMdIconConverter 16}}"/>
                            </Style>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ContextMenu.ItemContainerStyle>
        </ContextMenu>
        <Style x:Key="AddLibraryItemMenuItem"
               TargetType="MenuItem"
               BasedOn="{StaticResource {x:Type MenuItem}}">
            <Setter Property="Header" Value="Add"/>
            <Setter Property="Icon" Value="{Binding Icon, Converter={conv:MdIconGenerator Plus, 16}}"/>
            <Setter Property="ItemsSource" Value="{x:Static sl:App.CurrentItemFactories}"/>
            <Setter Property="ItemContainerStyle">
                <Setter.Value>
                    <Style TargetType="MenuItem"
                           BasedOn="{StaticResource {x:Type MenuItem}}">
                        <Setter Property="Header" Value="{Binding Name}"/>
                        <Setter Property="Icon"
                                Value="{Binding Icon, Converter={conv:IconKindToMdIconConverter 16}}"/>
                    </Style>
                </Setter.Value>
            </Setter>
        </Style>
        <ContextMenu x:Key="LibraryItemTemplateMenu">
            <MenuItem Header="Add" Style="{StaticResource AddLibraryItemMenuItem}"
                      Click="AddLibraryItem_Click"/>
            <MenuItem Header="Rename" Icon="{md:MaterialIconExt Pencil, 16}"
                      Click="RenameLibraryItem_Click"/>
            <MenuItem Header="Change icon" Icon="{md:MaterialIconExt Image, 16}"
                      Click="ChangeLibraryItemIcon_Click"/>
            <MenuItem Header="Reset color" Icon="{md:MaterialIconExt InvertColorsOff, 16}"
                      Click="RemoveLibraryItemIcon_Click"/>
            <MenuItem Header="Change sort weight" Icon="{md:MaterialIconExt Weight, 16}"
                      Click="ChangeLibraryItemSortWeight_Click"/>
            <MenuItem Header="Set as root" Icon="{md:MaterialIconExt SourceMerge, 16}"
                      Click="SetLibraryItemAsRoot_Click"/>
            <MenuItem Header="Actions" Icon="{md:MaterialIconExt HandPointingRight, 16}"
                      Click="LibraryItemAction_Click"
                      ItemsSource="{Binding Actions}"
                      Visibility="{Binding Actions, FallbackValue=Collapsed,
                                   Converter={conv:CombiningConverter
                                     {conv:EmptyEnumerableChecker False},
                                     {conv:BooleanToVisibilityConverter Visible, Collapsed}
                                   }}">
                <MenuItem.ItemContainerStyle>
                    <Style TargetType="MenuItem" BasedOn="{StaticResource {x:Type MenuItem}}">
                        <Setter Property="Header" Value="{Binding Content}"/>
                        <Setter Property="Icon" Value="{Binding Icon, Converter={conv:IconKindToMdIconConverter 16}}"/>
                    </Style>
                </MenuItem.ItemContainerStyle>
            </MenuItem>
            <MenuItem Header="Remove" Icon="{md:MaterialIconExt Delete, 16}"
                      Click="RemoveLibraryItem_Click"/>
        </ContextMenu>
        <ContextMenu x:Key="LibraryRootMenu">
            <MenuItem Header="Add" Style="{StaticResource AddLibraryItemMenuItem}"
                      Click="AddLibraryItem_Click"
                      IsEnabled="{Binding Library, Source={x:Reference This}, Converter={conv:NullChecker true}}"/>
        </ContextMenu>
        <HierarchicalDataTemplate x:Key="LibraryItemTemplate"
                                  ItemsSource="{Binding}">
            <Border Background="Transparent"
                    ContextMenu="{StaticResource LibraryItemTemplateMenu}"
                    AllowDrop="True"
                    MouseMove="LibraryItemTree_MouseMove"
                    Drop="LibraryItemTree_Drop">
                <Grid Margin="4">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <md:MaterialIcon Kind="{Binding Icon}"
                                     Foreground="{Binding IconColor,
                                        Converter={conv:ColorToBrushConverter NullValueResource=TextBrush}
                                     }"
                                     Width="18"/>
                    <Label Content="{Binding Name, Converter={conv:LowLineEscapeConverter}}"
                           Grid.Column="1"
                           Padding="0"
                           Margin="4,0,0,0"
                           VerticalAlignment="Center"
                           HorizontalAlignment="Left"/>
                </Grid>

                <Border.InputBindings>
                    <MouseBinding MouseAction="LeftDoubleClick"
                                  Command="{ext:CommandFactory Handler=LibraryItem_DoubleClick}"/>
                </Border.InputBindings>
            </Border>
        </HierarchicalDataTemplate>
    </Window.Resources>
    <Window.InputBindings>
        <KeyBinding Key="N" Modifiers="Ctrl" Command="{ext:CommandFactory Handler=NewKeybind_Click}"/>
        <KeyBinding Key="O" Modifiers="Ctrl" Command="{ext:CommandFactory Handler=OpenKeybind_Click}"/>
        <KeyBinding Key="S" Modifiers="Ctrl" Command="{ext:CommandFactory Handler=SaveKeybind_Click}"/>
    </Window.InputBindings>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="3*"/>
        </Grid.ColumnDefinitions>

        <ItemsControl Grid.ColumnSpan="4"
                      ItemsSource="{Binding MenuButtons, ElementName=This}">
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <Button Click="MenuButton_Click"
                            ToolTip="{Binding Content}"
                            Margin="4,4,0,4">
                        <md:MaterialIcon Kind="{Binding Icon}"
                                         Width="20"/>
                        <Button.InputBindings>
                            <MouseBinding MouseAction="RightClick"
                                          Command="{ext:CommandFactory Handler=MenuButton_RightClick}"
                                          CommandParameter="{Binding}"/>
                        </Button.InputBindings>
                    </Button>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
            
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal"/>
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
        </ItemsControl>

        <Button Grid.Row="1"
                Margin="4,0,4,4"
                Click="MoveUp_Click"
                ToolTip="Move up"
                Content="{md:MaterialIconExt Kind=ArrowUpBold, Size=20}"/>

        <TextBox Text="{Binding CurrentItem.Path, ElementName=This, Mode=OneWay}"
                 TextChanged="CurrentItemPathBox_TextChanged"
                 IsReadOnly="True"
                 Grid.Row="1"
                 Grid.Column="1"
                 VerticalAlignment="Center"
                 Margin="0,0,0,4"/>

        <TreeView x:Name="LibraryTree"
                  Grid.Row="2"
                  Grid.ColumnSpan="2"
                  Margin="4,0,0,4"
                  AllowDrop="True"
                  Drop="LibraryTree_Drop"
                  ItemTemplate="{StaticResource LibraryItemTemplate}"
                  ContextMenu="{StaticResource LibraryRootMenu}"
                  ItemsSource="{Binding CurrentItem, ElementName=This}"
                  DataContext="{Binding CurrentItem, ElementName=This}"/>

        <TabControl x:Name="LibraryTabs"
                    Margin="0,0,4,4"
                    Grid.Row="1"
                    Grid.RowSpan="2"
                    Grid.Column="3">
            <TabControl.ItemTemplate>
                <DataTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <md:MaterialIcon Width="16"
                                         Kind="{Binding Icon}"
                                         Foreground="{Binding IconColor,
                                             Converter={conv:ColorToBrushConverter NullValueResource=TextBrush}
                                         }"/>

                        <Label Content="{Binding Name}"
                               Grid.Column="1"
                               Padding="0"
                               Margin="4,0,4,0"/>

                        <Button Content="{md:MaterialIconExt Kind=Close}"
                                Width="16"
                                Height="16"
                                Click="CloseTab_Click"
                                Grid.Column="2"/>
                    </Grid>
                </DataTemplate>
            </TabControl.ItemTemplate>
            <TabControl.ContentTemplate>
                <DataTemplate>
                    <ContentControl Content="{Binding UI}" Padding="4"/>
                </DataTemplate>
            </TabControl.ContentTemplate>
        </TabControl>

        <GridSplitter Grid.Row="1"
                      Grid.Column="2"
                      Grid.RowSpan="2"
                      HorizontalAlignment="Center"
                      Width="4"/>
    </Grid>
</Window>
